
/* Problem Statement: You are given an integer array prices where prices[i] is the price of a given stock 
 * 					  on the ith day. You can only hold at most one share of the stock at any time. Find 
 * 					  the maximum profit you can achieve.
 * 
 * 					  NOTE: You can buy a stock and then immediately sell it on the same day.
 * 
 * General Observations:
 * 
 * 	- Multiple transactions are allowed, however, we cannot engage in multiple transactions 
 * 	  simultaneously.
 *    
 *  - Consider prices = [1,2,3,4,5]. The maximum profit that can be generated by doing a single 
 *    transaction (B1S5) is equal to the profit that can be generated by doing 4 individual transactions 
 *    (B1S2, B2S3, B3S4, B4S5).
 *    
 *  - The idea is to book profit wherever possible, i.e., whenever, yesterday's price is less than today's
 *    price, book profit (do one transaction).
 * 
 * */

public class BuySellStocks2 {
	
	private static int maxProfit(int[] prices) {
		
		int mProfit = 0;
		
		for(int i=1; i<prices.length; i++) {
			if(prices[i]>prices[i-1]) {
				mProfit += (prices[i] - prices[i-1]);
			}
		}
		
		return mProfit;
	}

    public static void main(String[] args) throws Exception {
    	
    	int[] prices = {7,1,5,3,6,4};
    	System.out.println(maxProfit(prices));
        
        
        
    }

}